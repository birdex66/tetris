#ifndef SETUP_HPP
#define SETUP_HPP

//basic io,string modification, and system call functions
#include <iostream>
#include <ncurses.h>
#include <string>
#include <bits/stdc++.h>


#include <array> // safer array modifications

#include <thread> // threads
#include <atomic> // thread variables
#include <chrono> // wait function
#include <mutex> // safer array access

using namespace std;
void initalizePattern(int patternIndex);
void printGrid(char grid[20][10]);
void drop(char grid[23][10]);
void resetGrid(char grid[20]);

void initNcurses();

void mov(char grid[20][10]);
void shiftLeft();
void shiftRight();

extern atomic<bool> run;
extern mutex grid_mutex;
//extern atomic<int> pattern[10];
extern atomic<int> curBlock[4][10];

static int I_block[4][10] = {
                            {0,0,0,1,1,1,1,0,0,0},
                            {0,0,0,0,0,0,0,0,0,0},
                            {0,0,0,0,0,0,0,0,0,0},
                            {0,0,0,0,0,0,0,0,0,0}
};

static int J_block[4][10] = {
                            {0,0,0,1,0,0,0,0,0,0},
                            {0,0,0,1,1,1,1,0,0,0},
                            {0,0,0,0,0,0,0,0,0,0},
                            {0,0,0,0,0,0,0,0,0,0}
};

static int L_block[4][10] = {
                            {0,0,0,0,0,0,1,0,0,0},
                            {0,0,0,1,1,1,1,0,0,0},
                            {0,0,0,0,0,0,0,0,0,0},
                            {0,0,0,0,0,0,0,0,0,0}
};

static int O_block[4][10] = {
                            {0,0,0,0,1,1,0,0,0,0},
                            {0,0,0,0,1,1,0,0,0,0},
                            {0,0,0,0,0,0,0,0,0,0},
                            {0,0,0,0,0,0,0,0,0,0}
};

static int S_block[4][10] = {
                            {0,0,0,0,1,1,0,0,0,0},
                            {0,0,0,1,1,0,0,0,0,0},
                            {0,0,0,0,0,0,0,0,0,0},
                            {0,0,0,0,0,0,0,0,0,0}
};

static int T_block[4][10] = {
                            {0,0,0,0,1,0,0,0,0,0},
                            {0,0,0,1,1,1,0,0,0,0},
                            {0,0,0,0,0,0,0,0,0,0},
                            {0,0,0,0,0,0,0,0,0,0}
};

static int Z_block[4][10] = {
                            {0,0,0,0,1,1,0,0,0,0},
                            {0,0,0,0,0,1,1,0,0,0},
                            {0,0,0,0,0,0,0,0,0,0},
                            {0,0,0,0,0,0,0,0,0,0}
};


static int (*allBlocks[7])[4][10] = {&I_block,&J_block,&L_block,&O_block,&S_block,&T_block,&Z_block};


//extern atomic<int> nextBlock
//extern atomic<int> curBlock

#endif

                    
